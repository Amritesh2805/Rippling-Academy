{"ast":null,"code":"var _jsxFileName = \"/Users/amritesh/Desktop/Rippling-academy/Week 2/expense-tracker-app/src/components/ExpenseTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport Expense from './Expense';\nimport TransactionHistory from './TransactionHistory';\nimport TransactionForm from './TransactionForm';\nimport { uniqueId } from '../utils'; // Aggregator component/container component\n\nconst transactionData = [];\n\nfunction ExpenseTracker() {\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n\n  const saveState = () => {\n    localStorage.setItem('expenseTrackerState', JSON.stringify(transactions));\n  };\n\n  const calculateExpenses = () => {\n    let income = 0,\n        expense = 0;\n    transactions.forEach(data => {\n      if (data.type === 'income') {\n        income += data.amount;\n      } else if (data.type === 'expense') {\n        expense += data.amount;\n      }\n    });\n    saveState();\n    setIncome(income);\n    setExpense(expense);\n  };\n\n  const handleAddNewTransaction = item => {\n    let newTransactions = [...transactions, item];\n    setTransactions(newTransactions);\n  };\n\n  const handleDeleteTransaction = id => {\n    const newTransactions = transactions.filter(item => item.id != id);\n    setTransactions(newTransactions);\n  };\n\n  useEffect(() => {\n    let localState = JSON.parse(localStorage.getItem('expenseTrackerState'));\n\n    if (localState) {\n      setTransactions(localState);\n    } else {\n      calculateExpenses();\n    }\n  }, []);\n  useEffect(() => {\n    calculateExpenses();\n  }, [transactions]);\n  const filter = {\n    name: \"\",\n    payment: \"\",\n    amount: \"\",\n    date: \"\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"width_100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Expense-tracker-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Expense Tracker\"), /*#__PURE__*/React.createElement(Expense, {\n    income: income,\n    expense: expense,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TransactionForm, {\n    onNewTransaction: handleAddNewTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TransactionHistory, {\n    transactions: transactions,\n    onDeleteTransaction: handleDeleteTransaction,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default ExpenseTracker;","map":{"version":3,"names":["React","useState","useEffect","Expense","TransactionHistory","TransactionForm","uniqueId","transactionData","ExpenseTracker","income","setIncome","expense","setExpense","transactions","setTransactions","saveState","localStorage","setItem","JSON","stringify","calculateExpenses","forEach","data","type","amount","handleAddNewTransaction","item","newTransactions","handleDeleteTransaction","id","filter","localState","parse","getItem","name","payment","date"],"sources":["/Users/amritesh/Desktop/Rippling-academy/Week 2/expense-tracker-app/src/components/ExpenseTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Expense from './Expense';\nimport TransactionHistory from './TransactionHistory';\nimport TransactionForm from './TransactionForm';\n\nimport { uniqueId } from '../utils';\n\n// Aggregator component/container component\n\nconst transactionData = [\n   \n];\n\nfunction ExpenseTracker() {\n\n    const [income, setIncome] = useState(0);\n    const [expense, setExpense] = useState(0);\n    const [transactions, setTransactions] = useState([]);\n    \n    const saveState = () => {\n        localStorage.setItem('expenseTrackerState', \n            JSON.stringify(transactions));\n    }\n\n    const calculateExpenses = () => {\n        let income = 0, expense = 0;\n        \n        transactions.forEach((data) => {\n            if (data.type === 'income') {\n                income += data.amount;\n            } else if (data.type === 'expense') {\n                expense += data.amount;\n            }\n        });\n\n        saveState();\n\n        setIncome(income);\n        setExpense(expense);\n    }\n\n    const handleAddNewTransaction = item => {\n        let newTransactions = [...transactions, item];\n        setTransactions(newTransactions);\n    }\n\n    const handleDeleteTransaction = id => {\n        const newTransactions = transactions.filter((item) => item.id != id);\n        setTransactions(newTransactions);\n    }\n\n    useEffect(() => {\n        let localState = JSON.parse(localStorage.getItem('expenseTrackerState'));\n        if (localState) {\n            setTransactions(localState);\n        } else {\n            calculateExpenses();\n        }\n    }, []);\n\n    useEffect(() => {\n        calculateExpenses();\n    }, [transactions]);\n\n    const filter = {\n        name : \"\",\n        payment: \"\",\n        amount: \"\",\n        date: \"\",\n\n    }\n\n    return (\n        <div className='width_100'>\n            <h1 className='Expense-tracker-head'>Expense Tracker</h1>\n            <Expense income={income} expense={expense} />\n            <TransactionForm onNewTransaction={handleAddNewTransaction} />\n            <TransactionHistory transactions={transactions}\n                onDeleteTransaction={handleDeleteTransaction} filter={filter} />\n                \n        </div>\n    )\n}\n\nexport default ExpenseTracker;"],"mappings":"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"},"metadata":{},"sourceType":"module"}